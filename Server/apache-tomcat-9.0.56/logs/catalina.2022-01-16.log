16-Jan-2022 02:05:08.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 02:05:08.006 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 02:05:08.006 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 02:05:08.006 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 02:05:08.006 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 02:05:08.006 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 02:05:08.007 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 02:05:08.007 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 02:05:08.007 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 02:05:08.007 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 02:05:08.007 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 02:05:08.016 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 02:05:08.017 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 02:05:08.017 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 02:05:08.017 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 02:05:08.017 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 02:05:08.064 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 02:05:08.109 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 02:05:08.109 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 02:05:08.115 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 02:05:08.368 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 02:05:08.390 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [621] milliseconds
16-Jan-2022 02:05:08.451 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 02:05:08.451 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 02:05:08.458 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 02:05:08.484 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 02:05:11.365 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 02:05:11.972 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 02:05:12.047 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 02:05:12.349 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [3,890] ms
16-Jan-2022 02:05:12.349 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 02:05:12.416 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [67] ms
16-Jan-2022 02:05:12.416 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 02:05:13.602 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [1,186] ms
16-Jan-2022 02:05:13.602 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 02:05:13.686 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [84] ms
16-Jan-2022 02:05:13.686 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 02:05:13.799 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [113] ms
16-Jan-2022 02:05:13.799 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 02:05:13.827 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [28] ms
16-Jan-2022 02:05:13.829 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 02:05:13.947 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [5557] milliseconds
16-Jan-2022 03:29:06.804 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 03:29:06.805 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 03:29:06.819 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 03:29:06.845 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.846 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.846 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.922 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.922 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.922 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.922 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.984 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.984 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.984 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:06.984 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.045 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.046 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.046 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.046 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.107 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.108 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.108 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.108 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.169 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.170 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.170 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.170 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.231 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.231 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.231 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.232 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.285 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.286 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.286 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.286 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.337 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.338 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.338 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:07.342 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 03:29:07.356 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 03:29:13.933 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.935 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.935 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.937 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.939 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.942 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.946 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.949 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.952 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.956 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.959 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 03:29:13.962 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:12:02.738 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 16:12:02.741 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 16:12:02.742 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 16:12:02.742 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 16:12:02.742 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 16:12:02.742 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 16:12:02.752 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 16:12:02.752 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 16:12:02.752 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 16:12:02.752 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 16:12:02.753 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 16:12:02.823 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 16:12:02.823 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 16:12:02.824 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 16:12:02.830 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 16:12:03.053 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 16:12:03.082 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [577] milliseconds
16-Jan-2022 16:12:03.136 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 16:12:03.136 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 16:12:03.177 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 16:12:03.194 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 16:12:06.022 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 16:12:06.622 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 16:12:06.694 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 16:12:07.000 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [3,823] ms
16-Jan-2022 16:12:07.001 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 16:12:07.068 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [66] ms
16-Jan-2022 16:12:07.068 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 16:12:08.171 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [1,103] ms
16-Jan-2022 16:12:08.171 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 16:12:08.260 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [89] ms
16-Jan-2022 16:12:08.260 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 16:12:08.357 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [97] ms
16-Jan-2022 16:12:08.357 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 16:12:08.382 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [25] ms
16-Jan-2022 16:12:08.384 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 16:12:08.500 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [5417] milliseconds
16-Jan-2022 16:42:50.344 INFO [http-nio-8080-exec-2] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 16:42:50.352 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.352 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.353 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.353 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.423 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.423 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.423 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.424 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.484 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.485 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.485 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.485 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.538 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.539 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.539 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.539 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.592 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.592 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.592 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.593 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.646 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.646 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.646 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.646 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.699 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.700 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.700 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.700 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.752 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.752 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.752 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.753 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.805 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.805 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.806 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.806 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.859 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.860 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.860 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.860 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.912 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-28-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.912 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-28-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.913 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.913 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-30-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.965 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-30-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.965 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.966 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-32-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:50.966 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-32-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.017 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.018 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-34-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.018 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-34-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.018 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.070 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-36-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.070 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-36-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.071 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.071 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-38-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:51.122 WARNING [http-nio-8080-exec-2] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-38-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:42:52.596 INFO [http-nio-8080-exec-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 16:42:53.097 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 16:42:53.155 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 16:42:53.445 INFO [http-nio-8080-exec-2] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 16:43:39.326 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.AMQP$BasicProperties.<init>(AMQP.java:1696)
		at com.rabbitmq.client.impl.AMQImpl.readContentHeaderFrom(AMQImpl.java:4845)
		at com.rabbitmq.client.impl.CommandAssembler.consumeHeaderFrame(CommandAssembler.java:101)
		at com.rabbitmq.client.impl.CommandAssembler.handleFrame(CommandAssembler.java:158)
		at com.rabbitmq.client.impl.AMQCommand.handleFrame(AMQCommand.java:89)
		at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:112)
		at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:739)
		at com.rabbitmq.client.impl.AMQConnection.access$300(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:666)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.326 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.error(SimpleLogger.java:602)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:119)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.326 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.AMQP$BasicProperties.<init>(AMQP.java:1696)
		at com.rabbitmq.client.impl.AMQImpl.readContentHeaderFrom(AMQImpl.java:4845)
		at com.rabbitmq.client.impl.CommandAssembler.consumeHeaderFrame(CommandAssembler.java:101)
		at com.rabbitmq.client.impl.CommandAssembler.handleFrame(CommandAssembler.java:158)
		at com.rabbitmq.client.impl.AMQCommand.handleFrame(AMQCommand.java:89)
		at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:112)
		at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:739)
		at com.rabbitmq.client.impl.AMQConnection.access$300(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:666)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.326 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.454 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.454 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.525 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.588 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.588 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.643 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.643 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.698 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.698 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.752 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.752 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.806 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.806 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.860 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.860 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.927 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.927 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:43:39.982 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.875 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 16:44:41.875 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 16:44:41.888 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 16:44:41.923 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.924 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.924 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.965 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.965 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.965 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:41.966 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.018 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.019 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.019 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.019 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.072 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.072 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.072 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:44:42.076 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 16:44:42.081 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 16:51:04.434 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:51:04.436 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:51:04.436 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:51:04.439 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 16:51:04.442 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:09:36.299 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 17:09:36.302 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 17:09:36.303 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:09:36.303 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:09:36.311 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 17:09:36.311 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:09:36.312 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 17:09:36.316 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 17:09:36.345 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 17:09:36.345 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 17:09:36.351 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 17:09:36.554 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:09:36.572 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [398] milliseconds
16-Jan-2022 17:09:36.600 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 17:09:36.601 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 17:09:36.627 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:09:36.636 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:09:38.289 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:09:38.889 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:09:38.957 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:09:39.263 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,635] ms
16-Jan-2022 17:09:39.263 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 17:09:39.287 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [24] ms
16-Jan-2022 17:09:39.287 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 17:09:39.655 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [367] ms
16-Jan-2022 17:09:39.655 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 17:09:39.697 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [42] ms
16-Jan-2022 17:09:39.697 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 17:09:39.741 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [44] ms
16-Jan-2022 17:09:39.741 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 17:09:39.765 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [24] ms
16-Jan-2022 17:09:39.767 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:09:39.839 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3267] milliseconds
16-Jan-2022 17:09:42.016 INFO [http-nio-8080-exec-10] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:09:43.430 INFO [http-nio-8080-exec-10] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:09:43.886 WARNING [http-nio-8080-exec-10] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:09:43.942 WARNING [http-nio-8080-exec-10] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:09:44.213 INFO [http-nio-8080-exec-10] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:10:51.873 SEVERE [http-nio-8080-exec-11] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:11:00.310 SEVERE [http-nio-8080-exec-12] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.271 INFO [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:19:11.278 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.278 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.279 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.279 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.550 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-7-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.550 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-7-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.551 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.551 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.603 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.604 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.604 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.604 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.656 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.656 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.657 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.657 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.708 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-7-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.709 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.709 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.709 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.761 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.761 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-17-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.762 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-17-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.762 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.814 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-19-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.815 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-19-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.815 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.815 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:11.868 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:19:13.309 INFO [http-nio-8080-exec-18] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:19:13.816 WARNING [http-nio-8080-exec-18] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:19:13.875 WARNING [http-nio-8080-exec-18] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:19:14.180 INFO [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:19:19.245 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 17:19:19.245 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:19:19.258 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 17:19:19.291 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:19:19.302 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:38.000 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:38.003 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:38.011 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 17:23:38.011 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 17:23:38.011 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:38.012 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 17:23:38.015 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 17:23:38.024 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 17:23:38.024 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 17:23:38.029 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 17:23:38.221 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:38.237 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [356] milliseconds
16-Jan-2022 17:23:38.264 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 17:23:38.264 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 17:23:38.282 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:23:38.291 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:23:39.877 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:23:40.462 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:23:40.530 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:23:40.827 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,544] ms
16-Jan-2022 17:23:40.827 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 17:23:40.851 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [24] ms
16-Jan-2022 17:23:40.851 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 17:23:41.214 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [363] ms
16-Jan-2022 17:23:41.214 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 17:23:41.253 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [39] ms
16-Jan-2022 17:23:41.253 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 17:23:41.300 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [47] ms
16-Jan-2022 17:23:41.301 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 17:23:41.326 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [25] ms
16-Jan-2022 17:23:41.329 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:41.406 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3168] milliseconds
16-Jan-2022 17:23:45.556 INFO [http-nio-8080-exec-3] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/RESTService]
16-Jan-2022 17:23:45.593 INFO [http-nio-8080-exec-7] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:23:45.594 WARNING [http-nio-8080-exec-7] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:23:46.999 INFO [http-nio-8080-exec-7] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:23:47.469 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:23:47.525 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:23:47.815 INFO [http-nio-8080-exec-7] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,212] ms
16-Jan-2022 17:23:47.818 INFO [http-nio-8080-exec-1] org.apache.catalina.util.LifecycleBase.start The start() method was called on component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/RESTService]] after start() had already been called. The second call will be ignored.
16-Jan-2022 17:23:54.629 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 17:23:54.629 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:54.643 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 17:23:54.658 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:54.670 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:57.761 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:57.764 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:57.773 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 17:23:57.773 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 17:23:57.773 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:23:57.774 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 17:23:57.777 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 17:23:57.778 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 17:23:57.778 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 17:23:57.783 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 17:23:57.969 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:23:57.984 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [339] milliseconds
16-Jan-2022 17:23:58.014 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 17:23:58.015 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 17:23:58.023 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:23:58.032 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:23:59.674 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:24:00.284 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:24:00.355 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:24:00.660 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,637] ms
16-Jan-2022 17:24:00.660 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 17:24:00.684 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [24] ms
16-Jan-2022 17:24:00.684 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 17:24:01.049 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [365] ms
16-Jan-2022 17:24:01.049 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 17:24:01.089 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [40] ms
16-Jan-2022 17:24:01.089 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 17:24:01.132 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [42] ms
16-Jan-2022 17:24:01.132 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 17:24:01.152 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [20] ms
16-Jan-2022 17:24:01.157 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:24:01.233 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3248] milliseconds
16-Jan-2022 17:25:13.977 INFO [http-nio-8080-exec-4] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:25:13.986 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:13.987 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:13.987 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:13.987 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:14.057 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:14.057 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:14.058 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:14.058 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:14.110 WARNING [http-nio-8080-exec-4] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:25:15.598 INFO [http-nio-8080-exec-4] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:25:16.072 WARNING [http-nio-8080-exec-4] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:25:16.137 WARNING [http-nio-8080-exec-4] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:25:16.426 INFO [http-nio-8080-exec-4] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:25:16.749 INFO [http-nio-8080-exec-2] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:25:18.161 INFO [http-nio-8080-exec-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:25:18.636 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:25:18.695 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:25:18.963 INFO [http-nio-8080-exec-2] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:25:22.484 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 17:25:22.484 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:25:22.498 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 17:25:22.530 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:25:22.545 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:25:47.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 17:25:47.901 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 17:25:47.901 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 17:25:47.901 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 17:25:47.901 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 17:25:47.901 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 17:25:47.902 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 17:25:47.902 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 17:25:47.902 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 17:25:47.902 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:25:47.902 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 17:25:47.913 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 17:25:47.914 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 17:25:47.914 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 17:25:47.914 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:25:47.914 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:25:47.914 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 17:25:47.918 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 17:25:47.919 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 17:25:47.919 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 17:25:47.926 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 17:25:48.187 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:25:48.202 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [456] milliseconds
16-Jan-2022 17:25:48.231 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 17:25:48.231 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 17:25:48.237 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:25:48.247 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:25:49.955 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:25:50.551 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:25:50.623 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:25:50.917 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,680] ms
16-Jan-2022 17:25:50.917 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 17:25:50.941 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [24] ms
16-Jan-2022 17:25:50.941 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 17:25:51.297 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [355] ms
16-Jan-2022 17:25:51.297 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 17:25:51.336 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [39] ms
16-Jan-2022 17:25:51.336 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 17:25:51.382 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [46] ms
16-Jan-2022 17:25:51.382 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 17:25:51.403 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [21] ms
16-Jan-2022 17:25:51.405 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:25:51.484 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3281] milliseconds
16-Jan-2022 17:26:32.430 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.AMQP$BasicProperties.<init>(AMQP.java:1696)
		at com.rabbitmq.client.impl.AMQImpl.readContentHeaderFrom(AMQImpl.java:4845)
		at com.rabbitmq.client.impl.CommandAssembler.consumeHeaderFrame(CommandAssembler.java:101)
		at com.rabbitmq.client.impl.CommandAssembler.handleFrame(CommandAssembler.java:158)
		at com.rabbitmq.client.impl.AMQCommand.handleFrame(AMQCommand.java:89)
		at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:112)
		at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:739)
		at com.rabbitmq.client.impl.AMQConnection.access$300(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:666)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:26:32.431 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.AMQP$BasicProperties.<init>(AMQP.java:1696)
		at com.rabbitmq.client.impl.AMQImpl.readContentHeaderFrom(AMQImpl.java:4845)
		at com.rabbitmq.client.impl.CommandAssembler.consumeHeaderFrame(CommandAssembler.java:101)
		at com.rabbitmq.client.impl.CommandAssembler.handleFrame(CommandAssembler.java:158)
		at com.rabbitmq.client.impl.AMQCommand.handleFrame(AMQCommand.java:89)
		at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:112)
		at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:739)
		at com.rabbitmq.client.impl.AMQConnection.access$300(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:666)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:26:32.431 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.error(SimpleLogger.java:602)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:119)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:26:32.431 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:26:32.431 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.ContentHeaderPropertyReader]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.AMQP$BasicProperties.<init>(AMQP.java:1696)
		at com.rabbitmq.client.impl.AMQImpl.readContentHeaderFrom(AMQImpl.java:4845)
		at com.rabbitmq.client.impl.CommandAssembler.consumeHeaderFrame(CommandAssembler.java:101)
		at com.rabbitmq.client.impl.CommandAssembler.handleFrame(CommandAssembler.java:158)
		at com.rabbitmq.client.impl.AMQCommand.handleFrame(AMQCommand.java:89)
		at com.rabbitmq.client.impl.AMQChannel.handleFrame(AMQChannel.java:112)
		at com.rabbitmq.client.impl.AMQConnection.readFrame(AMQConnection.java:739)
		at com.rabbitmq.client.impl.AMQConnection.access$300(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:666)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:26:32.431 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.rabbitmq.client.impl.SocketFrameHandler$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.SocketFrameHandler.close(SocketFrameHandler.java:205)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:786)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.766 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 17:27:30.766 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:27:30.780 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 17:27:30.796 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.797 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.797 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.857 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.858 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.858 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.858 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.910 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.911 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.911 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.911 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:27:30.968 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:27:30.977 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:45:31.591 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.593 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.593 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.595 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.595 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.598 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.591 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.593 INFO [52] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.593 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.594 INFO [43] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.595 INFO [52] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.601 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.603 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.605 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:45:31.608 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:46:10.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 17:46:10.877 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:46:10.878 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:46:10.895 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 17:46:10.896 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 17:46:10.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:46:10.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 17:46:10.897 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 17:46:10.903 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 17:46:10.904 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 17:46:10.904 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 17:46:10.922 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 17:46:11.178 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:46:11.198 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [523] milliseconds
16-Jan-2022 17:46:11.234 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 17:46:11.234 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 17:46:11.264 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:46:11.276 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:46:15.068 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:46:15.911 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:46:16.034 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:46:16.454 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [5,190] ms
16-Jan-2022 17:46:16.455 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 17:46:16.484 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [29] ms
16-Jan-2022 17:46:16.484 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 17:46:17.051 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [567] ms
16-Jan-2022 17:46:17.052 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 17:46:17.108 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [55] ms
16-Jan-2022 17:46:17.108 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 17:46:17.170 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [62] ms
16-Jan-2022 17:46:17.170 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 17:46:17.203 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [33] ms
16-Jan-2022 17:46:17.206 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 17:46:17.334 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [6135] milliseconds
16-Jan-2022 17:46:20.073 INFO [http-nio-8080-exec-10] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/RESTService]
16-Jan-2022 17:46:20.092 INFO [http-nio-8080-exec-2] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 17:46:20.092 WARNING [http-nio-8080-exec-2] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 17:46:21.546 INFO [http-nio-8080-exec-2] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:46:22.002 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:46:22.069 WARNING [http-nio-8080-exec-2] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:46:22.350 INFO [http-nio-8080-exec-2] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,258] ms
16-Jan-2022 17:46:22.353 INFO [http-nio-8080-exec-4] org.apache.catalina.util.LifecycleBase.start The start() method was called on component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/RESTService]] after start() had already been called. The second call will be ignored.
16-Jan-2022 17:47:00.449 INFO [http-nio-8080-exec-7] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:47:02.347 INFO [http-nio-8080-exec-7] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:47:02.947 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:47:03.010 WARNING [http-nio-8080-exec-7] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:47:03.300 INFO [http-nio-8080-exec-7] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:49:26.858 INFO [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:49:26.864 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:26.864 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:26.865 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:26.865 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:27.131 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:27.131 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:27.131 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:27.132 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:27.184 WARNING [http-nio-8080-exec-18] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-4-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:49:28.593 INFO [http-nio-8080-exec-18] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:49:29.065 WARNING [http-nio-8080-exec-18] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:49:29.127 WARNING [http-nio-8080-exec-18] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:49:29.404 INFO [http-nio-8080-exec-18] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 17:52:12.238 INFO [http-nio-8080-exec-30] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] has started
16-Jan-2022 17:52:12.244 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.244 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.245 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.245 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.478 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.479 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.479 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.479 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.531 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.531 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.531 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.532 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.583 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.584 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.584 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.584 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.635 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.636 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.636 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.636 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.687 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.688 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.688 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:12.688 WARNING [http-nio-8080-exec-30] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 17:52:14.145 INFO [http-nio-8080-exec-30] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 17:52:14.630 WARNING [http-nio-8080-exec-30] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 17:52:14.691 WARNING [http-nio-8080-exec-30] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 17:52:14.961 INFO [http-nio-8080-exec-30] org.apache.catalina.core.StandardContext.reload Reloading Context with name [/RESTService] is completed
16-Jan-2022 18:00:20.306 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 18:00:20.306 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:00:20.320 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 18:00:20.342 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.343 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.343 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.551 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.551 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.552 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.552 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.602 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.603 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.603 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.603 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.654 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.654 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.654 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-37-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.654 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-37-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.706 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.707 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-39-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.707 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-39-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.707 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.757 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.757 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.758 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.758 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.808 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.808 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.809 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-45-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.809 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-45-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.860 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.860 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.860 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.861 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.911 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.912 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.912 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.912 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.963 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-37-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:20.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-39-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.015 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.015 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.015 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.015 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.066 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-45-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.066 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.066 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-53-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.066 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-53-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.672 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.673 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-55-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.673 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-55-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.673 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.673 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-57-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.673 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-57-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.674 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.674 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-59-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.674 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-59-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.674 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.674 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-59-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-57-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-47-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-45-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-55-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-49-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.675 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-53-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-37-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.676 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-39-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.677 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.677 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.677 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-62-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.677 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-62-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.677 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.678 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-64-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.678 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-64-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.678 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.678 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-66-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.678 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-66-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-68-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-68-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-70-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-70-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-72-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-72-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.681 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-74-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.681 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-74-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.681 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.681 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-76-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.681 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-76-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.682 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.682 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-78-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.682 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-78-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.683 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.683 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-80-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.683 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-80-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.684 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.684 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-82-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.684 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-82-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.685 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.685 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-84-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.685 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-84-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.686 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.686 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-86-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.686 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-86-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.686 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.686 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-88-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.687 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-88-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:00:21.691 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:00:21.699 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:01:16.127 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 18:01:16.129 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 18:01:16.129 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 18:01:16.129 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 18:01:16.129 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:01:16.130 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:01:16.139 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 18:01:16.144 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 18:01:16.144 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 18:01:16.144 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 18:01:16.149 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 18:01:16.347 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:01:16.362 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [395] milliseconds
16-Jan-2022 18:01:16.390 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 18:01:16.390 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 18:01:16.396 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 18:01:16.405 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 18:01:18.100 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 18:01:18.715 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 18:01:18.780 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 18:01:19.081 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,684] ms
16-Jan-2022 18:01:19.081 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 18:01:19.105 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [24] ms
16-Jan-2022 18:01:19.105 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 18:01:19.470 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [365] ms
16-Jan-2022 18:01:19.470 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 18:01:19.511 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [41] ms
16-Jan-2022 18:01:19.511 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 18:01:19.557 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [46] ms
16-Jan-2022 18:01:19.557 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 18:01:19.583 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [25] ms
16-Jan-2022 18:01:19.585 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:01:19.663 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3300] milliseconds
16-Jan-2022 18:01:24.242 INFO [http-nio-8080-exec-10] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/RESTService]
16-Jan-2022 18:01:24.259 INFO [http-nio-8080-exec-3] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 18:01:24.260 WARNING [http-nio-8080-exec-3] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 18:01:25.668 INFO [http-nio-8080-exec-3] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 18:01:26.151 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 18:01:26.211 WARNING [http-nio-8080-exec-3] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 18:01:26.503 INFO [http-nio-8080-exec-3] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,244] ms
16-Jan-2022 18:01:26.506 INFO [http-nio-8080-exec-5] org.apache.catalina.util.LifecycleBase.start The start() method was called on component [StandardEngine[Catalina].StandardHost[localhost].StandardContext[/RESTService]] after start() had already been called. The second call will be ignored.
16-Jan-2022 18:11:14.258 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 18:11:14.259 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:11:14.272 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 18:11:14.292 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.292 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-3-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.293 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-3-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.455 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.455 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.455 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.456 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-3-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.506 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.507 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.507 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.507 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.560 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.560 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.560 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.561 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.613 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.665 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.666 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-16-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.666 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.666 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.720 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.720 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.720 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-5-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.721 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-9-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.772 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-3-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.772 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.772 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.773 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.824 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.824 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.824 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-23-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.824 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-23-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.877 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.878 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-25-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.878 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-25-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:11:14.882 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:11:14.894 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:14:18.168 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:14:18.171 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:14:18.180 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
16-Jan-2022 18:14:18.181 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
16-Jan-2022 18:14:18.184 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
16-Jan-2022 18:14:18.200 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
16-Jan-2022 18:14:18.200 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
16-Jan-2022 18:14:18.205 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
16-Jan-2022 18:14:18.394 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:14:18.410 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [359] milliseconds
16-Jan-2022 18:14:18.438 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
16-Jan-2022 18:14:18.438 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
16-Jan-2022 18:14:18.445 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
16-Jan-2022 18:14:18.453 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
16-Jan-2022 18:14:20.097 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
16-Jan-2022 18:14:20.451 WARNING [main] org.apache.catalina.util.SessionIdGeneratorBase.createSecureRandom Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [206] milliseconds.
16-Jan-2022 18:14:20.933 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
16-Jan-2022 18:14:21.001 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
16-Jan-2022 18:14:21.298 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [2,854] ms
16-Jan-2022 18:14:21.298 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
16-Jan-2022 18:14:21.321 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [23] ms
16-Jan-2022 18:14:21.321 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
16-Jan-2022 18:14:21.688 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [367] ms
16-Jan-2022 18:14:21.688 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
16-Jan-2022 18:14:21.729 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [41] ms
16-Jan-2022 18:14:21.730 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
16-Jan-2022 18:14:21.774 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [44] ms
16-Jan-2022 18:14:21.774 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
16-Jan-2022 18:14:21.796 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [21] ms
16-Jan-2022 18:14:21.801 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:14:21.877 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [3466] milliseconds
16-Jan-2022 18:21:34.392 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
16-Jan-2022 18:21:34.392 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:21:34.406 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
16-Jan-2022 18:21:34.439 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.439 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.439 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.494 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.494 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.494 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.494 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.556 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.556 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.556 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.557 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.618 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.618 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.618 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.619 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.679 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.680 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.741 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.741 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.742 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.742 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-17-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.804 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-17-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.804 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.804 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-19-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.804 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-19-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.866 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.866 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.866 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.866 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.927 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-23-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.928 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-23-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.928 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.928 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-23-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.990 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-21-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.990 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.990 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:34.990 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.052 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.052 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.052 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-26-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.052 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.113 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-28-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.114 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-28-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.114 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.114 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-30-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.175 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-30-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.176 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-12-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.176 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-30-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.176 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-19-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.237 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-14-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.238 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-17-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.238 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.238 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.300 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:21:35.305 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:21:35.316 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
16-Jan-2022 18:24:03.776 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.776 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.776 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.776 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.776 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.781 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.781 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.780 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.780 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.780 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.780 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.783 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.782 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.782 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.783 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.785 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.785 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.786 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.786 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.788 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.789 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.790 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.793 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.793 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.795 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.796 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.797 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.798 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.799 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.801 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.802 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.803 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.804 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.804 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.806 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.807 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.808 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.809 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.811 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.812 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.814 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.815 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.817 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.819 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.820 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.826 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.829 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.832 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.835 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.838 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.841 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.844 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.847 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.849 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.852 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.855 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.858 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.861 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.864 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.867 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.870 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.872 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.875 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.878 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.881 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.884 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
16-Jan-2022 18:24:03.887 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
