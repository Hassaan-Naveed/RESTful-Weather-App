26-Jan-2022 00:11:25.673 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 00:11:25.676 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 00:11:25.684 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 00:11:25.685 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
26-Jan-2022 00:11:25.762 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
26-Jan-2022 00:11:25.763 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
26-Jan-2022 00:11:25.763 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
26-Jan-2022 00:11:25.829 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
26-Jan-2022 00:11:26.048 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
26-Jan-2022 00:11:26.067 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [598] milliseconds
26-Jan-2022 00:11:26.119 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
26-Jan-2022 00:11:26.119 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
26-Jan-2022 00:11:26.125 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
26-Jan-2022 00:11:26.157 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
26-Jan-2022 00:11:29.846 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
26-Jan-2022 00:11:30.431 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
26-Jan-2022 00:11:30.492 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
26-Jan-2022 00:11:30.781 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [4,656] ms
26-Jan-2022 00:11:30.782 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
26-Jan-2022 00:11:30.816 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [34] ms
26-Jan-2022 00:11:30.816 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
26-Jan-2022 00:11:31.731 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [915] ms
26-Jan-2022 00:11:31.731 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
26-Jan-2022 00:11:31.782 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [51] ms
26-Jan-2022 00:11:31.782 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
26-Jan-2022 00:11:31.839 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [57] ms
26-Jan-2022 00:11:31.839 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
26-Jan-2022 00:11:31.864 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [25] ms
26-Jan-2022 00:11:31.866 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
26-Jan-2022 00:11:31.935 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [5867] milliseconds
26-Jan-2022 00:16:25.079 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
26-Jan-2022 00:16:25.079 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
26-Jan-2022 00:16:25.087 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
26-Jan-2022 00:16:25.114 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.114 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.115 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.143 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-2-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.143 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.144 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.144 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-6-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.196 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.197 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.197 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.198 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.252 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.252 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.252 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-10-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.253 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.305 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.306 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.306 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.306 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.360 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:16:25.365 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
26-Jan-2022 00:16:25.369 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
26-Jan-2022 00:19:03.050 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.051 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.051 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.051 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.051 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.052 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.052 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 00:19:03.053 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:29:21.856 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version name:   Apache Tomcat/9.0.56
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Dec 2 2021 14:30:07 UTC
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version number: 9.0.56.0
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Windows 10
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            10.0
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             C:\Program Files\Java\jdk-17.0.1
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           17.0.1+12-LTS-39
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Vendor:            Oracle Corporation
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_BASE:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 14:29:21.860 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log CATALINA_HOME:         D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.lang=ALL-UNNAMED
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.io=ALL-UNNAMED
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util=ALL-UNNAMED
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.base/java.util.concurrent=ALL-UNNAMED
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: --add-opens=java.rmi/sun.rmi.transport=ALL-UNNAMED
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.config.file=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\logging.properties
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dhttp.nonProxyHosts=localhost|127.0.0.1|DESKTOP-3BEMDQH
26-Jan-2022 14:29:21.872 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djdk.tls.ephemeralDHKeySize=2048
26-Jan-2022 14:29:21.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.protocol.handler.pkgs=org.apache.catalina.webresources
26-Jan-2022 14:29:21.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dignore.endorsed.dirs=
26-Jan-2022 14:29:21.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.base=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 14:29:21.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Dcatalina.home=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56
26-Jan-2022 14:29:21.873 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Command line argument: -Djava.io.tmpdir=D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\temp
26-Jan-2022 14:29:21.943 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent Loaded Apache Tomcat Native library [1.2.31] using APR version [1.7.0].
26-Jan-2022 14:29:21.969 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true], UDS [true].
26-Jan-2022 14:29:21.969 INFO [main] org.apache.catalina.core.AprLifecycleListener.lifecycleEvent APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
26-Jan-2022 14:29:22.034 INFO [main] org.apache.catalina.core.AprLifecycleListener.initializeSSL OpenSSL successfully initialized [OpenSSL 1.1.1l  24 Aug 2021]
26-Jan-2022 14:29:22.288 INFO [main] org.apache.coyote.AbstractProtocol.init Initializing ProtocolHandler ["http-nio-8080"]
26-Jan-2022 14:29:22.307 INFO [main] org.apache.catalina.startup.Catalina.load Server initialization in [691] milliseconds
26-Jan-2022 14:29:22.343 INFO [main] org.apache.catalina.core.StandardService.startInternal Starting service [Catalina]
26-Jan-2022 14:29:22.343 INFO [main] org.apache.catalina.core.StandardEngine.startInternal Starting Servlet engine: [Apache Tomcat/9.0.56]
26-Jan-2022 14:29:22.376 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deploying deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml]
26-Jan-2022 14:29:22.388 WARNING [main] org.apache.catalina.startup.HostConfig.deployDescriptor The path attribute with value [/RESTService] in deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has been ignored
26-Jan-2022 14:29:26.163 INFO [main] org.apache.jasper.servlet.TldScanner.scanJars At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
26-Jan-2022 14:29:26.785 WARNING [main] org.glassfish.jersey.message.internal.MessagingBinders$EnabledProvidersBinder.bindToBinder A class javax.activation.DataSource for a default provider MessageBodyWriter<javax.activation.DataSource> was not found. The provider is not available.
26-Jan-2022 14:29:26.854 WARNING [main] org.glassfish.jersey.server.wadl.WadlFeature.configure JAXBContext implementation could not be found. WADL feature is disabled.
26-Jan-2022 14:29:27.151 INFO [main] org.apache.catalina.startup.HostConfig.deployDescriptor Deployment of deployment descriptor [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\conf\Catalina\localhost\RESTService.xml] has finished in [4,774] ms
26-Jan-2022 14:29:27.151 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs]
26-Jan-2022 14:29:27.212 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\docs] has finished in [61] ms
26-Jan-2022 14:29:27.212 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples]
26-Jan-2022 14:29:28.213 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\examples] has finished in [1,001] ms
26-Jan-2022 14:29:28.214 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager]
26-Jan-2022 14:29:28.273 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\host-manager] has finished in [59] ms
26-Jan-2022 14:29:28.273 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager]
26-Jan-2022 14:29:28.344 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\manager] has finished in [70] ms
26-Jan-2022 14:29:28.344 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT]
26-Jan-2022 14:29:28.365 INFO [main] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [D:\Documents\Work\Uni Year 3\SCCC\Server\apache-tomcat-9.0.56\webapps\ROOT] has finished in [20] ms
26-Jan-2022 14:29:28.367 INFO [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler ["http-nio-8080"]
26-Jan-2022 14:29:28.446 INFO [main] org.apache.catalina.startup.Catalina.start Server startup in [6138] milliseconds
26-Jan-2022 14:34:42.083 SEVERE [http-nio-8080-exec-4] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:35:03.289 SEVERE [http-nio-8080-exec-6] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:35:24.546 SEVERE [http-nio-8080-exec-7] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:35:38.616 SEVERE [http-nio-8080-exec-9] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:43:30.024 SEVERE [http-nio-8080-exec-6] orchestrator.RabbitMQOffersConsumer.run null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQOffersConsumer.run(RabbitMQOffersConsumer.java:35)
		at orchestrator.Trips.<init>(Trips.java:47)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
		at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
		at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
		at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
		at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1356)
		at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)
		at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)
		at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)
		at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)
		at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:758)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:721)
		at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:691)
		at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)
		at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)
		at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)
		at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)
		at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)
		at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)
		at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:247)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:43:51.128 SEVERE [http-nio-8080-exec-6] orchestrator.RabbitMQSender.sendTravelExchange null
	java.net.ConnectException: Connection timed out: no further information
		at java.base/sun.nio.ch.Net.pollConnect(Native Method)
		at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
		at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
		at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
		at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
		at java.base/java.net.Socket.connect(Socket.java:633)
		at com.rabbitmq.client.impl.SocketFrameHandlerFactory.create(SocketFrameHandlerFactory.java:60)
		at com.rabbitmq.client.impl.recovery.RecoveryAwareAMQConnectionFactory.newConnection(RecoveryAwareAMQConnectionFactory.java:63)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.init(AutorecoveringConnection.java:160)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1216)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1173)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1131)
		at com.rabbitmq.client.ConnectionFactory.newConnection(ConnectionFactory.java:1294)
		at orchestrator.RabbitMQSender.sendTravelExchange(RabbitMQSender.java:41)
		at orchestrator.Trips.putJson(Trips.java:102)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
		at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
		at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
		at java.base/java.lang.reflect.Method.invoke(Method.java:568)
		at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)
		at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:159)
		at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:475)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:397)
		at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:81)
		at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:255)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)
		at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:292)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:274)
		at org.glassfish.jersey.internal.Errors.process(Errors.java:244)
		at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)
		at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:234)
		at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)
		at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:394)
		at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:366)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:319)
		at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
		at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:687)
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:895)
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1732)
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.927 INFO [main] org.apache.catalina.core.StandardServer.await A valid shutdown command was received via the shutdown port. Stopping the Server instance.
26-Jan-2022 14:57:48.928 INFO [main] org.apache.coyote.AbstractProtocol.pause Pausing ProtocolHandler ["http-nio-8080"]
26-Jan-2022 14:57:48.937 INFO [main] org.apache.catalina.core.StandardService.stopInternal Stopping service [Catalina]
26-Jan-2022 14:57:48.960 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.960 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.961 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.963 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:48.964 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.016 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.017 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.017 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.017 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.070 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.070 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.070 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.071 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.121 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.121 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.121 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.122 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.174 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.175 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.175 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.175 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.226 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.226 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.227 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.227 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-24-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.277 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-8-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.277 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-13-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.277 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-11-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.278 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-22-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.327 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.328 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-27-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.328 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-27-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.328 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.378 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.378 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-29-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.379 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.379 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.433 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-31-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.433 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.434 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.434 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-33-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.490 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.491 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.491 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.491 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.551 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.552 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.552 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.552 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.613 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-38-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-38-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-20-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.614 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-18-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.664 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-35-thread-5] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.664 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-38-thread-4] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.664 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-15-thread-6] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.665 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.715 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.716 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-41-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.716 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [AMQP Connection 152.71.155.95:5672] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/sun.nio.ch.Net.poll(Native Method)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.park(NioSocketImpl.java:181)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:285)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:309)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
 java.base@17.0.1/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
 java.base@17.0.1/java.net.Socket$SocketInputStream.read(Socket.java:966)
 java.base@17.0.1/java.io.BufferedInputStream.fill(BufferedInputStream.java:244)
 java.base@17.0.1/java.io.BufferedInputStream.read(BufferedInputStream.java:263)
 java.base@17.0.1/java.io.DataInputStream.readUnsignedByte(DataInputStream.java:294)
 com.rabbitmq.client.impl.Frame.readFrom(Frame.java:91)
 com.rabbitmq.client.impl.SocketFrameHandler.readFrame(SocketFrameHandler.java:184)
 com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:665)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.716 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-2] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.768 WARNING [main] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [RESTService] appears to have started a thread named [pool-43-thread-3] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.park(LockSupport.java:341)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:506)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.unmanagedBlock(ForkJoinPool.java:3463)
 java.base@17.0.1/java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.java:3434)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1623)
 java.base@17.0.1/java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:435)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:57:49.771 INFO [main] org.apache.coyote.AbstractProtocol.stop Stopping ProtocolHandler ["http-nio-8080"]
26-Jan-2022 14:57:49.784 INFO [main] org.apache.coyote.AbstractProtocol.destroy Destroying ProtocolHandler ["http-nio-8080"]
26-Jan-2022 14:58:24.116 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.117 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.117 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [java.net.ConnectException]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleConnectionRecoveryException(ForgivingExceptionHandler.java:73)
		at com.rabbitmq.client.impl.recovery.AutorecoveringConnection.lambda$addAutomaticRecoveryListener$3(AutorecoveringConnection.java:522)
		at com.rabbitmq.client.impl.AMQConnection.notifyRecoveryCanBeginListeners(AMQConnection.java:817)
		at com.rabbitmq.client.impl.AMQConnection.doFinalShutdown(AMQConnection.java:794)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:678)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.118 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.118 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.118 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.119 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.119 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.120 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.120 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.120 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.121 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.121 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.121 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.122 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.122 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
26-Jan-2022 14:58:24.123 INFO [AMQP Connection 152.71.155.95:5672] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
	java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [org.slf4j.impl.OutputChoice$1]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1427)
		at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1415)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1254)
		at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1215)
		at org.slf4j.impl.OutputChoice.getTargetPrintStream(OutputChoice.java:40)
		at org.slf4j.impl.SimpleLogger.write(SimpleLogger.java:322)
		at org.slf4j.impl.SimpleLogger.log(SimpleLogger.java:294)
		at org.slf4j.impl.SimpleLogger.warn(SimpleLogger.java:531)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.log(ForgivingExceptionHandler.java:115)
		at com.rabbitmq.client.impl.ForgivingExceptionHandler.handleUnexpectedConnectionDriverException(ForgivingExceptionHandler.java:36)
		at com.rabbitmq.client.impl.AMQConnection.handleFailure(AMQConnection.java:777)
		at com.rabbitmq.client.impl.AMQConnection.access$400(AMQConnection.java:47)
		at com.rabbitmq.client.impl.AMQConnection$MainLoop.run(AMQConnection.java:674)
		at java.base/java.lang.Thread.run(Thread.java:833)
